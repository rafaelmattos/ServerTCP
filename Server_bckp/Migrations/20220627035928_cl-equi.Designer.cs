// <auto-generated />
using System;
using Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Server.Migrations
{
    [DbContext(typeof(MasterContext))]
    [Migration("20220627035928_cl-equi")]
    partial class clequi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Server.Amount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Curr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Amount");
                });

            modelBuilder.Entity("Server.BagID", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("N")
                        .HasColumnType("int");

                    b.Property<int?>("RemoteMessageId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RemoteMessageId");

                    b.ToTable("BagID");
                });

            modelBuilder.Entity("Server.CashIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AmountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmountId");

                    b.ToTable("CashIn");
                });

            modelBuilder.Entity("Server.CashOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AmountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmountId");

                    b.ToTable("CashOut");
                });

            modelBuilder.Entity("Server.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("CountingsId")
                        .HasColumnType("int");

                    b.Property<int>("NDoc")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountingsId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Server.Cheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ChequesId")
                        .HasColumnType("int");

                    b.Property<string>("Codeline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Curr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChequesId");

                    b.ToTable("Cheque");
                });

            modelBuilder.Entity("Server.Cheques", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Cheques");
                });

            modelBuilder.Entity("Server.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Server.Count", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountingId")
                        .HasColumnType("int");

                    b.Property<string>("Curr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Den")
                        .HasColumnType("float");

                    b.Property<int?>("DestDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("N")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("SType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountingId");

                    b.HasIndex("DestDetailsId");

                    b.ToTable("Count");
                });

            modelBuilder.Entity("Server.Counted", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountingsId")
                        .HasColumnType("int");

                    b.Property<double>("Denom")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountingsId");

                    b.ToTable("Counted");
                });

            modelBuilder.Entity("Server.Counting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Counting");
                });

            modelBuilder.Entity("Server.Countings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Valid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Countings");
                });

            modelBuilder.Entity("Server.DestDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("DestDetails");
                });

            modelBuilder.Entity("Server.Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountingsId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountingsId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("Server.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("Server.ManualDeposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnvelopeId")
                        .HasColumnType("int");

                    b.Property<int?>("ManualDepositsId")
                        .HasColumnType("int");

                    b.Property<int>("Nop")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TotalId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManualDepositsId");

                    b.HasIndex("TotalId");

                    b.ToTable("ManualDeposit");
                });

            modelBuilder.Entity("Server.ManualDeposits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ManualDeposits");
                });

            modelBuilder.Entity("Server.RemoteMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AccountingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CashInId")
                        .HasColumnType("int");

                    b.Property<int?>("CashOutId")
                        .HasColumnType("int");

                    b.Property<int?>("ChannelID")
                        .HasColumnType("int");

                    b.Property<string>("ChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChequesId")
                        .HasColumnType("int");

                    b.Property<string>("Conciliation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountingId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DestDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailsId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnvelopeID")
                        .HasColumnType("int");

                    b.Property<int?>("ExecutedBy")
                        .HasColumnType("int");

                    b.Property<int?>("IsKit")
                        .HasColumnType("int");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int");

                    b.Property<int?>("ManualDepositsId")
                        .HasColumnType("int");

                    b.Property<int>("NOP")
                        .HasColumnType("int");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SealID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransactionID")
                        .HasColumnType("int");

                    b.Property<string>("TransactionInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAlternateID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("UserInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserLevel")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CashInId");

                    b.HasIndex("CashOutId");

                    b.HasIndex("ChequesId");

                    b.HasIndex("CountingId");

                    b.HasIndex("DestDetailsId");

                    b.HasIndex("DetailsId");

                    b.HasIndex("ManualDepositsId");

                    b.HasIndex("TicketsId");

                    b.ToTable("RemoteMessages");
                });

            modelBuilder.Entity("Server.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Curr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("TicketId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketsId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TicketsId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("Server.Tickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Server.Total", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Total");
                });

            modelBuilder.Entity("Server.BagID", b =>
                {
                    b.HasOne("Server.RemoteMessage", null)
                        .WithMany("BagID")
                        .HasForeignKey("RemoteMessageId");
                });

            modelBuilder.Entity("Server.CashIn", b =>
                {
                    b.HasOne("Server.Amount", "Amount")
                        .WithMany()
                        .HasForeignKey("AmountId");
                });

            modelBuilder.Entity("Server.CashOut", b =>
                {
                    b.HasOne("Server.Amount", "Amount")
                        .WithMany()
                        .HasForeignKey("AmountId");
                });

            modelBuilder.Entity("Server.Category", b =>
                {
                    b.HasOne("Server.Countings", null)
                        .WithMany("Category")
                        .HasForeignKey("CountingsId");
                });

            modelBuilder.Entity("Server.Cheque", b =>
                {
                    b.HasOne("Server.Cheques", null)
                        .WithMany("Cheque")
                        .HasForeignKey("ChequesId");
                });

            modelBuilder.Entity("Server.Count", b =>
                {
                    b.HasOne("Server.Counting", null)
                        .WithMany("Count")
                        .HasForeignKey("CountingId");

                    b.HasOne("Server.DestDetails", null)
                        .WithMany("Count")
                        .HasForeignKey("DestDetailsId");
                });

            modelBuilder.Entity("Server.Counted", b =>
                {
                    b.HasOne("Server.Countings", null)
                        .WithMany("Counted")
                        .HasForeignKey("CountingsId");
                });

            modelBuilder.Entity("Server.Details", b =>
                {
                    b.HasOne("Server.Countings", "Countings")
                        .WithMany()
                        .HasForeignKey("CountingsId");
                });

            modelBuilder.Entity("Server.Equipamento", b =>
                {
                    b.HasOne("Server.Cliente", "Cliente")
                        .WithMany("Equipamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Server.ManualDeposit", b =>
                {
                    b.HasOne("Server.ManualDeposits", null)
                        .WithMany("ManualDeposit")
                        .HasForeignKey("ManualDepositsId");

                    b.HasOne("Server.Total", "Total")
                        .WithMany()
                        .HasForeignKey("TotalId");
                });

            modelBuilder.Entity("Server.RemoteMessage", b =>
                {
                    b.HasOne("Server.CashIn", "CashIn")
                        .WithMany()
                        .HasForeignKey("CashInId");

                    b.HasOne("Server.CashOut", "CashOut")
                        .WithMany()
                        .HasForeignKey("CashOutId");

                    b.HasOne("Server.Cheques", "Cheques")
                        .WithMany()
                        .HasForeignKey("ChequesId");

                    b.HasOne("Server.Counting", "Counting")
                        .WithMany()
                        .HasForeignKey("CountingId");

                    b.HasOne("Server.DestDetails", "DestDetails")
                        .WithMany()
                        .HasForeignKey("DestDetailsId");

                    b.HasOne("Server.Details", "Details")
                        .WithMany()
                        .HasForeignKey("DetailsId");

                    b.HasOne("Server.ManualDeposits", "ManualDeposits")
                        .WithMany()
                        .HasForeignKey("ManualDepositsId");

                    b.HasOne("Server.Tickets", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsId");
                });

            modelBuilder.Entity("Server.Ticket", b =>
                {
                    b.HasOne("Server.Tickets", null)
                        .WithMany("Ticket")
                        .HasForeignKey("TicketsId");
                });
#pragma warning restore 612, 618
        }
    }
}
